/* vi: ft=cpp
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define SYMBOLS 1
#define NUMBERS 2
#define NAV 3
#define FUNCTION 4

/ {
    keymap {
        compatible = "zmk,keymap";

        default {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  '    |  ,  |  .  |  P/Nav  |  Y  |           |  F/Fn  |  G  |  C/Caps  |    R    |  L   |
// A/Sym |  O/Ctrl  |  E/Alt  |  U/Cmd  |  I  |           |  D  |  H/Cmd  |  T/Alt  |    N/Ctrl    |  S/Sym |
// Esc/Lsft|  Q  |  J  |  K  |  X  |           |  B  |  M  |  W  |    V    |Z/Rsft|
// |    | SPC/Num | Bspc |  ( Caps )       ( Mute )  | Tab | Ent |     |
           bindings = <
            &kp APOS &kp COMMA &kp DOT &lt NAV P &kp Y &lt FUNCTION F &kp G &mt CAPS C &kp R  &kp L
            &lt SYMBOLS A &mt LCTRL O &mt LALT E &mt LCMD U &kp I &kp D &mt RCMD H &mt RALT T &mt RCTRL N &lt SYMBOLS S
            &mt LSHFT ESC &kp Q &kp J &kp K &kp X &kp CAPS &kp C_MUTE &kp B &kp M &kp W &kp V &mt RSHIFT Z
            &none &lt NUMBERS SPACE &kp BSPC &kp TAB &kp RET &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        symbols {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  !  |  @  |  {  |  }  |     |                |         |    <    |    >   |  *  |   #  |
//  ^  |  $  |  (  |  )  |  \  |                |    &    |    =    |    -   |  :  |   ;  |
//  ~  |  `  |  [  |  ]  |     |                |         |    +    |    _   |  %  |   ?  |
//         |  ,,  | //\ | |/&  |  ,,   |   ,,   |    `    |    "    |   ,,   |
           bindings = <
            &kp EXCL &mt LS(LCTRL) AT &mt LS(LALT) LBRC &mt LS(LCMD) RBRC &none &none &mt RS(RCMD) LT &mt RS(RALT) GT &mt RS(RCTRL) ASTERISK &mt HASH LA(N3)
            &kp CARET &mt LCTRL DOLLAR &mt LALT LPAR &mt LCMD RPAR &kp BACKSLASH &kp AMPS &mt RCMD EQL &mt RALT MINUS &mt RCTRL COLON &kp SEMICOLON
            &kp TILDE &kp GRAVE &kp LBKT &kp RBKT &none &trans &trans &none &kp PLUS &kp UNDERSCORE &kp PERCENT &kp QMARK
            &trans &mt BACKSLASH SLASH &mt PIPE AMPS &kp GRAVE &kp DQT &trans
           >;

        };
        numbers {
           bindings = <
	    &none &none &none &none &none &none &kp N4 &kp N5 &kp N6 &kp N7
	    &none &none &none &none &none &kp DEL &kp N0 &kp N1 &mt COLON N2 &kp N3
	    &none &none &none &none &none &trans &trans &none &kp N8 &kp N9 &mt MINUS PLUS &mt SLASH ASTERISK
	    &none &none &none &kp EQL &kp DOT &none
            >;
        };
        nav {
           bindings = <
	    &none &none &none &none &none &none &none &kp UP &none &none
	    &none &none &none &none &none &none &kp LEFT &kp DOWN &none &none
	    &none &none &none &none &none &trans &trans &none &kp HOME &none &kp END &none
	    &none &none &none &kp PG_DN &kp PG_UP &none
            >;
        };
        fn {
           bindings = <
            &kp F5 &kp F6 &kp F7 &kp F8 &none &none &none &none &none &none
            &kp F1 &kp F2 &kp F3 &kp F4 &kp DEL &none &none &none &none &none
            &kp F9 &kp F10 &kp F11 &kp F12 &none &trans &trans &none &none &none &none &none
	    &none &none &none &none &none &none 
            >;
        };
    };
};
